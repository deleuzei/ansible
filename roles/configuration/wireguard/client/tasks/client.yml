---
# sub-main task file client.yml for configuration/wireguard/client role
- name: Installing Wireguard package
  apt:
    cache_valid_time: 3600
    update_cache: yes
    name: wireguard
    state: latest

- name: Ensuring that Wireguard configuration directories exists
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0700
  loop:
    - /etc/wireguard
    - /etc/wireguard/keys
    - /etc/wiregurad/peers

- name: Generating Wireguard public and private keys
  shell:
    cmd: "if ! test -f /etc/wireguard/keys/local.privkey; then wg genkey | tee /etc/wireguard/keys/local.privkey | wg pubkey | tee /etc/wireguard/keys/local.pubkey; fi"

- name: Accessing Wireguard public key
  command:
    cmd: "cat /etc/wireguard/keys/local.pubkey"
  register: local_node_pubkey

- name: Registering Wireguard public key
  set_fact: local_node_pubkey="{{ local_node_pubkey.stdout }}"

- name: Accessing Wireguard private key
  command:
    cmd: "cat /etc/wireguard/keys/local.pubkey"
  register: local_node_privkey

- name: Registering Wireguard private key
  set_fact: local_node_privkey="{{ local_node_privkey.stdout }}"

- name: Accessing the master node's Wireguard public key
  command:
    cmd: "cat /etc/wireguard/keys/local.pubkey"
  register: master_node_pubkey
  remote_user: root
  delegate_to: "{{ hostvars['wg_master_node']['ansible_host'] }}"
  
- name: Registering the master node's Wireguard public key
  set_fact: master_node_pubkey="{{ master_node_pubkey.stdout }}"
  remote_user: root
  delegate_to: "{{ hostvars['wg_master_node']['ansible_host'] }}"

- name: Accessing the master node's Wireguard private key
  command:
    cmd: "cat /etc/wireguard/keys/local.privkey"
  register: master_node_privkey

- name: Registering the master node's Wireguard private key
  set_fact: master_node_privkey="{{ master_node_privkey.stdout }}"

- name: Configuring Wireguard interface
  blockinfile:
    path: "/etc/wireguard/wg0.conf"
    marker: "{mark}"
    marker_begin: "# ANSIBLE MANAGED INTERFACE BLOCK BEGIN"
    marker_end: "# ANSIBLE MANAGED INTERFACE BLOCK BEGIN"
    create: yes
    block: |
      [Interface]
      Address = {{ wg_ip }}
      PrivateKey = {{ local_node_privkey }}
      PostUp= wg addconf /etc/wireguad/peers/*
      DNS = "{{ wg_dns }}"

- name: Configuring Wireguard master peer configuration
  blockinfile:
    path: "/etc/wireguard/peers/wg0.conf"
    marker: "{mark}"
    marker_begin: "# ANSIBLE MANAGED PEER BLOCK BEGIN"
    marker_end: "# ANSIBLE MANAGED PEER BLOCK END"
    create: yes
    block: |
      [Peer]
      PublicKey = {{ master_node_pubkey }}
      Endpoint = {{ hostvars['wg_master_node']['ansible_host']  }}:{{ wg_port }}
      AllowedIPs = {{ allowed_ips }}

- name: Restarting Wireguard interface
  command:
    cmd: "wg-quick down wg0 && wg-quick up wg0"
    
- name: Enabling Wireguard systemd service
  service:
    name: wg-quick@wg0
    enabled: yes
    state: enabled